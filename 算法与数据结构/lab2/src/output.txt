build tree from pre-order traversal.
  integer for node, -1 for none.
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
Recursice?(0/1):Preorder Traversal: 5 1 2 3 4 
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
Recursice?(0/1):Preorder Traversal: 5 1 2 3 4 
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
Recursice?(0/1):Inorder Traversal: 1 5 3 2 4 
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
Recursice?(0/1):Inorder Traversal: 1 5 3 2 4 
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
Recursice?(0/1):Postorder Traversal: 1 3 4 2 5 
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
Recursice?(0/1):Postorder Traversal: 1 3 4 2 5 
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
The LCA of a and b: 5
Function Instruction:
1: Preorder traversal.
2: Inorder traversal.
3: Postorder traversal.
4: Find LCA.
0: Exit Program.
